
 private static boolean checkWin() {
 
      return (check_row (field,fieldSizeX, fieldSizeY) || check_col (field,fieldSizeX, fieldSizeY) || diagonals());
    }
        public static boolean check_row (char[][] field,int fieldSizeX,int fieldSizeY){
            boolean flag = false;     //переменная для проверки, если метод вернут true Значит прошла проверка
            for(int i = 0; i < fieldSizeY; i++){
                int flagCounter = 0;
                for(int j = 1 ;j < fieldSizeX;j++){
                    if(field[i][j] == field[i][j-1]){
                        flag = true;
                        flagCounter++;
                        if(flagCounter == (fieldSizeY-1)){
                            System.out.println("Всё работает, проверка по строкам: " + flag);
                        }
                    } else flag = false;
                }
            }
            return flag;
        }
        public static boolean check_col(char[][] field,int fieldSizeX,int fieldSizeY){         //проверка по столбцам
           boolean flag = false;
            for (int i = 1; i < fieldSizeY; i++){
                int flagCounter = 0;
                for (int j = 0; j < fieldSizeX; j++){
                    if(field[i][j] == field[i-1][j]){
                        flag = true;
                        flagCounter++;
                        if(flagCounter == (fieldSizeX-1)){
                            System.out.println("Все работает, проверка по столбцам: " + flag);
                        }
                    } else flag = false;
                }
            }
            return flag;

        }

        public static boolean diagonals() {        //полвеока по диагоналям
        return checkMainDiagonal(field, fieldSizeX, fieldSizeY) ||  checkReverseMainDiagonal(field, fieldSizeX, fieldSizeY);
        }

    public static boolean checkMainDiagonal(char[][] field, int fieldSizeX, int fieldSizeY){      //проверка по главной диагонале
        boolean flag = false;
       // checkRowCol(board[0][0],board[1][1],board[2][2]) || checkRowCol(board[2][0],board[1][1],board[0][2]);
        for( int i = 1; i < fieldSizeY; i++){
            for(int j = 1; j < fieldSizeX; j++){
                if(i == j){
                    flag = (field[i][j] == field[i-1][j-1]) ? true : false;
                }
            }
        }
        return flag;
    } 
    public static boolean checkReverseMainDiagonal(char[][] field, int fieldSizeX, int fieldSizeY){  //проверка по другой диагонале
        boolean flag = false;
        char additinalFlag = field[0][fieldSizeY];
        for(int i = 0; i < fieldSizeX; i++){
            for( int j = fieldSizeY-1; j < fieldSizeY; j--){
                if((i+j) == fieldSizeY){
                    //flag = (field[i][j] == additinalFlag) ? true : false;
                    //additinalFlag = field[i][j];
                    if(field[i][j] == additinalFlag){
                        continue;
                    } else return false;
                }
                // additinalFlag = field[i][j];
            }
        }
        return flag;
    }
